on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master
      - develop

name: build

jobs:
  build:
    name: Build
    runs-on: windows-2019

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Build
      id: build
      env:
        DOCKER_TAG: magicxor/radstudio:xe8upd1-delphi-net3.5-ltsc2019        
      run: |
        $currentDir = (Get-Location).Path;
        docker run -v "${currentDir}:C:\build\app" $DOCKER_TAG powershell -Command 'msbuild /t:build /p:Config=Release /p:Platform=Win64 /p:DCC_Define=CONSOLE_TESTRUNNER C:\build\app\ArrayLinq.groupproj; Set-Content -NoNewline -Force -Path C:\build\app\build_result.txt -Value $LastExitCode;';
        $buildResult = Get-Content -Path build_result.txt;
        if ($buildResult -ne '0') { throw ('msbuild exit code: ' + $buildResult); } else { Write-Host ('msbuild exit code: ' + $buildResult); }

    - name: Run unit tests
      id: unit-tests
      run: |
        C:\build\app\tests\Win64\Release\ArrayLinqTests.exe | Out-File -FilePath C:\build\app\unit_tests_result.txt;
        $testsResult = Get-Content -Path build_result.txt;
        Write-Host ($testsResult);
        if ($testsResult -match 'FAILURES!!!') { throw ('unit tests result: fail'); } else { Write-Host ('unit tests result: OK'); }
